package ag.ifpb.rmi.iiop.idl;

import java.rmi.RemoteException;
import java.util.Properties;

import org.omg.CORBA.ORB;
import org.omg.CORBA.ORBPackage.InvalidName;
import org.omg.CosNaming.NameComponent;
import org.omg.CosNaming.NamingContextExt;
import org.omg.CosNaming.NamingContextExtHelper;
import org.omg.CosNaming.NamingContextPackage.CannotProceed;
import org.omg.CosNaming.NamingContextPackage.NotFound;
import org.omg.PortableServer.POA;
import org.omg.PortableServer.POAHelper;
import org.omg.PortableServer.POAManagerPackage.AdapterInactive;
import org.omg.PortableServer.POAPackage.ServantNotActive;
import org.omg.PortableServer.POAPackage.WrongPolicy;

import ag.ifpb.rmi.iiop.idl.service.HelloHelper;
import ag.ifpb.rmi.iiop.idl.service.HelloHolder;
import ag.ifpb.rmi.iiop.idl.service.Hello;

/**
 * Hello world!
 *
 */
public class ServerMain {
	public static void main(String[] args) throws InvalidName, RemoteException, AdapterInactive, ServantNotActive, WrongPolicy, org.omg.CosNaming.NamingContextPackage.InvalidName, NotFound, CannotProceed {
		//set initial port
		Properties properties = new Properties();
		properties.setProperty("org.omg.CORBA.ORBInitialPort", "1050");
				
		// create and initialize the ORB
		ORB orb = ORB.init(args, properties);

		// get reference to rootpoa & activate the POAManager
		POA rootpoa = POAHelper.narrow(orb.resolve_initial_references("RootPOA"));//serviço de nomes  ORB
		rootpoa.the_POAManager().activate();

		// create servant and register it with the ORB
		HelloImpl helloImpl = new HelloImpl();

		// get object reference from the servant
		org.omg.CORBA.Object ref = rootpoa.servant_to_reference(helloImpl);
		Hello href = ag.ifpb.rmi.iiop.idl.service.HelloHelper.narrow(ref);

		// get the root naming context
		// NameService invokes the name service
		org.omg.CORBA.Object objRef = orb.resolve_initial_references("NameService");//serviço de nomes  ORB
		// Use NamingContextExt which is part of the Interoperable
		// Naming Service (INS) specification.
		NamingContextExt ncRef = NamingContextExtHelper.narrow(objRef);

		// bind the Object Reference in Naming
		String name = "Hello";
		NameComponent path[] = ncRef.to_name(name);
		ncRef.rebind(path, href);

		System.out.println("HelloServer ready and waiting ...");

		// wait for invocations from clients
		orb.run();
	}
}
