// Skeleton class generated by rmic, do not edit.
// Contents subject to change without notice.

package ag.ifpb.rmi.raw.server;

@SuppressWarnings("deprecation")
public final class HelloServerImpl_Skel implements java.rmi.server.Skeleton {
	// serial
	private static final long interfaceHash = -1173440210250143739L;
	// methods
	private static final java.rmi.server.Operation[] operations = {
			new java.rmi.server.Operation("void hello(java.lang.String)") };

	public java.rmi.server.Operation[] getOperations() {
		return (java.rmi.server.Operation[]) operations.clone();
	}

	public void dispatch(java.rmi.Remote obj, java.rmi.server.RemoteCall call, int opnum, long hash) 
			throws java.lang.Exception {
		//check interface hash
		if (hash != interfaceHash)
			throw new java.rmi.server.SkeletonMismatchException("interface hash mismatch");
		//check method
		HelloServerImpl server = (HelloServerImpl) obj;
		switch (opnum) {
		case 0: {
			// hello(String $param1)
			String $param1;
			try {
				java.io.ObjectInput in = call.getInputStream();
				$param1 = (java.lang.String) in.readObject();
			} catch (java.io.IOException e) {
				throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
			} catch (java.lang.ClassNotFoundException e) {
				throw new java.rmi.UnmarshalException("error unmarshalling arguments", e);
			} finally {
				call.releaseInputStream();
			}
			//exec hello method
			server.hello($param1);
			//write response
			try {
				call.getResultStream(true);//confirmation
			} catch (java.io.IOException e) {
				throw new java.rmi.MarshalException("error marshalling return", e);
			}
			//end method 0
			break;
		}
		default:
			throw new java.rmi.UnmarshalException("invalid method number");
		}
}}
